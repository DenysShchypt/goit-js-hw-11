{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAOA,IAAIC,EAAO,EACX,MAAMC,GAAO,EAAAC,EAAAC,WAkBb,SAASC,EAAWC,GAEhB,MAAMC,EAAaC,EAAiBF,EAAIG,MAClCC,EAAgBJ,EAAIG,KAAKE,UACzBC,EAAeC,KAAKC,KAAKJ,EAAgB,IAC/CR,EAAKa,QAAQC,UAAYT,EAyB7B,SAAwBG,EAAeE,GAEb,IAAlBF,IACAX,EAAAkB,OAAOC,QAAQ,oBAAoBR,aACnCR,EAAKiB,QAAQC,UAAUC,QAAQ,YAAa,iBAG1B,IAAlBX,GACAX,EAAAkB,OAAOK,QAAQ,4EACfpB,EAAKiB,QAAQC,UAAUC,QAAQ,eAAgB,cACxCX,EAAgB,IAAuB,IAAjBE,IAC7BV,EAAKiB,QAAQC,UAAUG,OAAO,aAC9BC,YAAW,KACPzB,EAAAkB,OAAOQ,KAAK,6DAA6D,GAC1E,K,CAtCPC,CAAehB,EAAeE,GAC9Be,IAyDAzB,EAAKa,QAAQa,kBAAkBC,wBAC/BC,OAAOC,SAAS,CACZC,IAAK,GACLC,SAAU,U,CAvDlB,SAASzB,EAAiB0B,GAEtB,OAAOA,EAAKC,KAAKC,KAAI,EAACC,aAAEA,EAAYC,cAAEA,EAAaC,KAAEA,EAAIC,MAAEA,EAAKC,MAAEA,EAAKC,SAAEA,EAAQC,UAAEA,KACxE,oEAC0BL,yBACtBD,WAAsBE,2HAGAC,qDACAC,wDACGC,yDACCC,0CAGtCC,KAAK,G,CAuBZ,SAASjB,IAEY,IAAIkB,EAAAC,GAAJ,CAAmB,aAChC,CACIC,KAAK,EACLC,aAAc,MACdC,gBAAiB,SACjBC,aAAc,MAEbC,S,CAwBb,SAASC,EAAgB9C,GAErB,MAAMC,EAAaC,EAAiBF,EAAIG,MAClCC,EAAgBJ,EAAIG,KAAKE,UACzBC,EAAeC,KAAKwC,MAAM3C,EAAgB,IAChDR,EAAKa,QAAQuC,mBAAmB,YAAa/C,GAOjD,SAA+BgD,EAAO3C,GAE9BA,EAAe2C,IACfrD,EAAKiB,QAAQC,UAAUC,QAAQ,eAAgB,aAC/CG,YAAW,KACPzB,EAAAkB,OAAOQ,KAAK,6DAA8D,CACtE+B,QAAS,KACV,GACJ,K,CAdPC,CAAsBxD,EAAMW,GAC5Be,IAoBAzB,EAAKa,QAAQa,kBAAkBC,wBAC/BC,OAAOC,SAAS,CACZC,IAAK,IACLC,SAAU,U,CAjIlB/B,EAAKwD,KAAKC,iBAAiB,UAG3B,SAA0BC,GACtBA,EAAIC,iBACJ5D,EAAO,EACP,MAAM6D,EAAaF,EAAIG,cAAcC,SAASC,YAAYC,MAAMC,OAChE,GAAmB,KAAfL,EACA,OAAO/D,EAAAkB,OAAOK,QAAQ,6EAE1B,EAAA8C,EAAAC,eAAcP,EAAY7D,GAAMqE,KAAKjE,GAAYkE,OAAMC,IACnDC,QAAQC,IAAIF,EAAM,IAEtBG,aAAaC,QAAQ,QAASd,E,IAZlC5D,EAAKiB,QAAQwC,iBAAiB,SAwF9B,SAAwBC,GAEpB3D,GAAQ,EACR,MAAM4E,EAAsBF,aAAaG,QAAQ,UACjD,EAAAV,EAAAC,eAAcQ,EAAqB5E,GAAMqE,KAAKlB,GAAiBmB,OAAMC,IACjEC,QAAQC,IAAIF,EAAM,G","sources":["src/js/load_more.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { fetchCategory } from './api';\nimport getRefs from './get-refs';\n\nlet page = 0;\nconst refs = getRefs();\nrefs.form.addEventListener('submit', handlerValueForm);\nrefs.loadBtn.addEventListener('click', handlerBtnLoad)\n\nfunction handlerValueForm(evt) {\n    evt.preventDefault();\n    page = 1;\n    const inputValue = evt.currentTarget.elements.searchQuery.value.trim();\n    if (inputValue === '') {\n        return Notify.warning(\"Sorry, there are no images matching your search query. Please try again.\");\n    };\n    fetchCategory(inputValue, page).then(renderCard).catch(error => {\n        console.log(error);\n    });\n    localStorage.setItem(\"input\", inputValue);\n\n};\n\nfunction renderCard(res) {\n\n    const markupCard = createMarkupCard(res.data);\n    const quantityPhoto = res.data.totalHits;\n    const quantityPage = Math.ceil(quantityPhoto / 40)\n    refs.gallery.innerHTML = markupCard;\n    checkZeroArray(quantityPhoto, quantityPage)\n    createBigImg()\n    scrollOnePage()\n\n};\n\nfunction createMarkupCard(card) {\n\n    return card.hits.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => {\n        return `<div class=\"photo-card\">\n        <a class=\"gallery__link\" href=\"${largeImageURL}\">\n       <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" class=\"gallery-img\"/>\n       </a>\n       <div class=\"info\">\n         <p class=\"info-item\"><b>Likes ${likes}</b></p>\n         <p class=\"info-item\"><b>Views ${views}</b></p>\n         <p class=\"info-item\"><b>Comments ${comments}</b></p>\n         <p class=\"info-item\"><b>Downloads ${downloads}</b></p>\n       </div>\n     </div>`\n    }).join('');\n\n};\n\nfunction checkZeroArray(quantityPhoto, quantityPage) {\n\n    if (quantityPhoto !== 0) {\n        Notify.success(`Hooray! We found ${quantityPhoto} images.`);\n        refs.loadBtn.classList.replace('load-more', 'js-load-more');\n    };\n\n    if (quantityPhoto === 0) {\n        Notify.warning(\"Sorry, there are no images matching your search query. Please try again.\");\n        refs.loadBtn.classList.replace('js-load-more', 'load-more');\n    } else if (quantityPhoto < 40 && quantityPage === 1) {\n        refs.loadBtn.classList.toggle('load-more');\n        setTimeout(() => {\n            Notify.info(\"We're sorry, but you've reached the end of search results.\")\n        }, 4000);\n    };\n\n};\n\nfunction createBigImg() {\n\n    const lightbox = new SimpleLightbox('.gallery a',\n        {\n            nav: true,\n            captionsData: 'alt',\n            captionPosition: 'bottom',\n            captionDelay: 250,\n        });\n    lightbox.refresh();\n\n};\n\nfunction scrollOnePage() {\n\n    refs.gallery.firstElementChild.getBoundingClientRect();\n    window.scrollBy({\n        top: 90,\n        behavior: 'smooth',\n    });\n\n};\n\nfunction handlerBtnLoad(evt) {\n\n    page += 1;\n    const getRecordInputValue = localStorage.getItem(\"input\");\n    fetchCategory(getRecordInputValue, page).then(renderNextCards).catch(error => {\n        console.log(error);\n    });\n\n};\n\nfunction renderNextCards(res) {\n\n    const markupCard = createMarkupCard(res.data);\n    const quantityPhoto = res.data.totalHits;\n    const quantityPage = Math.floor(quantityPhoto / 40);\n    refs.gallery.insertAdjacentHTML('beforeend', markupCard);\n    auditMaxQuantityPhoto(page, quantityPage);\n    createBigImg();\n    scrollSecondPage();\n\n};\n\nfunction auditMaxQuantityPhoto(pages, quantityPage) {\n\n    if (quantityPage < pages) {\n        refs.loadBtn.classList.replace('js-load-more', 'load-more');\n        setTimeout(() => {\n            Notify.info(\"We're sorry, but you've reached the end of search results.\", {\n                timeout: 5000,\n            },)\n        }, 3000)\n    };\n\n};\n\nfunction scrollSecondPage() {\n\n    refs.gallery.firstElementChild.getBoundingClientRect();\n    window.scrollBy({\n        top: 590,\n        behavior: 'smooth',\n    });\n};"],"names":["$iQIUW","parcelRequire","$40e894cac32bd2b5$var$page","$40e894cac32bd2b5$var$refs","$lpPzL","default","$40e894cac32bd2b5$var$renderCard","res","markupCard","$40e894cac32bd2b5$var$createMarkupCard","data","quantityPhoto","totalHits","quantityPage","Math","ceil","gallery","innerHTML","Notify","success","loadBtn","classList","replace","warning","toggle","setTimeout","info","$40e894cac32bd2b5$var$checkZeroArray","$40e894cac32bd2b5$var$createBigImg","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","card","hits","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","$parcel$interopDefault","$fZKcF","nav","captionsData","captionPosition","captionDelay","refresh","$40e894cac32bd2b5$var$renderNextCards","floor","insertAdjacentHTML","pages","timeout","$40e894cac32bd2b5$var$auditMaxQuantityPhoto","form","addEventListener","evt","preventDefault","inputValue","currentTarget","elements","searchQuery","value","trim","$7rYDH","fetchCategory","then","catch","error","console","log","localStorage","setItem","getRecordInputValue","getItem"],"version":3,"file":"load_more.4906e123.js.map"}