{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uCAOA,IAAIC,EAAO,EACX,MAAMC,GAAO,EAAAC,EAAAC,WAiCb,SAASC,EAAiBC,GAEtB,OAAOA,EAAKC,KAAKC,KAAI,EAACC,aAAEA,EAAYC,cAAEA,EAAaC,KAAEA,EAAIC,MAAEA,EAAKC,MAAEA,EAAKC,SAAEA,EAAQC,UAAEA,KACxE,oEAC0BL,yBACtBD,WAAsBE,2HAGAC,qDACAC,wDACGC,yDACCC,0CAGtCC,KAAK,G,CAsBZ,SAASC,IAEY,IAAIC,EAAAC,GAAJ,CAAmB,aAChC,CACIC,KAAK,EACLC,aAAc,MACdC,gBAAiB,SACjBC,aAAc,MAEbC,S,CA6Bb,SAASC,EAAgBC,GAErB,MAAMC,EAAatB,EAAiBqB,EAAIE,MAClCC,EAAgBH,EAAIE,KAAKE,UACzBC,EAAeC,KAAKC,MAAMJ,EAAgB,IAChD3B,EAAKgC,QAAQC,mBAAmB,YAAaR,GAC7C5B,EAAAqC,OAAOC,QAAQ,oBAAoBR,aAOvC,SAA+BS,EAAOP,GAE9BA,EAAeO,IACfpC,EAAKqC,QAAQC,UAAUC,QAAQ,eAAgB,aAC/CC,YAAW,KACP3C,EAAAqC,OAAOO,KAAK,6DAA8D,CACtEC,QAAS,KACV,GACJ,K,CAdPC,CAAsB5C,EAAM8B,GAC5Bd,IAsBAf,EAAKgC,QAAQY,kBAAkBC,wBAC/BC,OAAOC,SAAS,CACZC,IAAK,IACLC,SAAU,U,CA3IlBjD,EAAKkD,KAAKC,iBAAiB,UAG3BC,eAAgCC,GAC5BA,EAAIC,iBACJvD,EAAO,EACP,MAAMwD,EAAaF,EAAIG,cAAcC,SAASC,YAAYC,MAAMC,OAChE,GAAmB,KAAfL,EACA,OAAO1D,EAAAqC,OAAO2B,QAAQ,4EAE1B,KAUJ,SAAoBrC,GAEhB,MAAMC,EAAatB,EAAiBqB,EAAIE,MAClCC,EAAgBH,EAAIE,KAAKE,UACzBC,EAAeC,KAAKgC,KAAKnC,EAAgB,IAC/C3B,EAAKgC,QAAQ+B,UAAYtC,EAyB7B,SAAwBE,EAAeE,GAEb,IAAlBF,IACA9B,EAAAqC,OAAOC,QAAQ,oBAAoBR,aACnC3B,EAAKqC,QAAQC,UAAUC,QAAQ,YAAa,iBAG1B,IAAlBZ,EACA9B,EAAAqC,OAAO2B,QAAQ,4EACRlC,EAAgB,IAAuB,IAAjBE,IAC7B7B,EAAKqC,QAAQC,UAAU0B,OAAO,aAC9BxB,YAAW,KACP3C,EAAAqC,OAAOO,KAAK,6DAA6D,GAC1E,K,CArCPwB,CAAetC,EAAeE,GAC9Bd,IAwDAf,EAAKgC,QAAQY,kBAAkBC,wBAC/BC,OAAOC,SAAS,CACZC,IAAK,GACLC,SAAU,U,CA1EViB,OADoB,EAAAC,EAAAC,eAAcb,EAAYxD,G,CAEhD,MAAOsE,GACLC,QAAQC,IAAIF,E,CAEhBG,aAAaC,QAAQ,QAASlB,E,IAflCvD,EAAKqC,QAAQc,iBAAiB,SA0F9BC,iBAEIrD,GAAQ,EACR,MAAM2E,EAAsBF,aAAaG,QAAQ,UAOjD,EAAAR,EAAAC,eAAcM,EAAqB3E,GAAM6E,KAAKrD,GAAiBsD,OAAMR,IACjEC,QAAQC,IAAIF,EAAM,G","sources":["src/js/load_more.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { fetchCategory } from './api';\nimport getRefs from './get-refs';\n\nlet page = 0;\nconst refs = getRefs();\nrefs.form.addEventListener('submit', handlerValueForm);\nrefs.loadBtn.addEventListener('click', handlerBtnLoad)\n\nasync function handlerValueForm(evt) {\n    evt.preventDefault();\n    page = 1;\n    const inputValue = evt.currentTarget.elements.searchQuery.value.trim();\n    if (inputValue === '') {\n        return Notify.warning(\"Sorry, there are no images matching your search query. Please try again.\");\n    };\n    try {\n        const cards = await fetchCategory(inputValue, page);\n        renderCard(cards);\n    } catch (error) {\n        console.log(error);\n    };\n    localStorage.setItem(\"input\", inputValue);\n\n};\n\nfunction renderCard(res) {\n\n    const markupCard = createMarkupCard(res.data);\n    const quantityPhoto = res.data.totalHits;\n    const quantityPage = Math.ceil(quantityPhoto / 40)\n    refs.gallery.innerHTML = markupCard;\n    checkZeroArray(quantityPhoto, quantityPage)\n    createBigImg()\n    scrollOnePage()\n\n};\n\nfunction createMarkupCard(card) {\n\n    return card.hits.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => {\n        return `<div class=\"photo-card\">\n        <a class=\"gallery__link\" href=\"${largeImageURL}\">\n       <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" class=\"gallery-img\"/>\n       </a>\n       <div class=\"info\">\n         <p class=\"info-item\"><b>Likes ${likes}</b></p>\n         <p class=\"info-item\"><b>Views ${views}</b></p>\n         <p class=\"info-item\"><b>Comments ${comments}</b></p>\n         <p class=\"info-item\"><b>Downloads ${downloads}</b></p>\n       </div>\n     </div>`\n    }).join('');\n\n};\n\nfunction checkZeroArray(quantityPhoto, quantityPage) {\n\n    if (quantityPhoto !== 0) {\n        Notify.success(`Hooray! We found ${quantityPhoto} images.`);\n        refs.loadBtn.classList.replace('load-more', 'js-load-more');\n    };\n\n    if (quantityPhoto === 0) {\n        Notify.warning(\"Sorry, there are no images matching your search query. Please try again.\");\n    } else if (quantityPhoto < 40 && quantityPage === 1) {\n        refs.loadBtn.classList.toggle('load-more');\n        setTimeout(() => {\n            Notify.info(\"We're sorry, but you've reached the end of search results.\")\n        }, 4000);\n    };\n\n};\n\nfunction createBigImg() {\n\n    const lightbox = new SimpleLightbox('.gallery a',\n        {\n            nav: true,\n            captionsData: 'alt',\n            captionPosition: 'bottom',\n            captionDelay: 250,\n        });\n    lightbox.refresh();\n\n};\n\nfunction scrollOnePage() {\n\n    refs.gallery.firstElementChild.getBoundingClientRect();\n    window.scrollBy({\n        top: 90,\n        behavior: 'smooth',\n    });\n\n};\n\nasync function handlerBtnLoad() {\n\n    page += 1;\n    const getRecordInputValue = localStorage.getItem(\"input\");\n    // try {\n    //     const cards = await fetchCategory(getRecordInputValue, page);\n    //     renderNextCards(cards);\n    // } catch (error) {\n    //     console.log(error);\n    // };\n    fetchCategory(getRecordInputValue, page).then(renderNextCards).catch(error => {\n        console.log(error);\n    })\n};\n\nfunction renderNextCards(res) {\n\n    const markupCard = createMarkupCard(res.data);\n    const quantityPhoto = res.data.totalHits;\n    const quantityPage = Math.floor(quantityPhoto / 40);\n    refs.gallery.insertAdjacentHTML('beforeend', markupCard);\n    Notify.success(`Hooray! We found ${quantityPhoto} images.`);\n    auditMaxQuantityPhoto(page, quantityPage);\n    createBigImg();\n    scrollSecondPage();\n\n};\n\nfunction auditMaxQuantityPhoto(pages, quantityPage) {\n\n    if (quantityPage < pages) {\n        refs.loadBtn.classList.replace('js-load-more', 'load-more');\n        setTimeout(() => {\n            Notify.info(\"We're sorry, but you've reached the end of search results.\", {\n                timeout: 5000,\n            },)\n        }, 3000)\n    };\n\n};\n\n\n\nfunction scrollSecondPage() {\n\n    refs.gallery.firstElementChild.getBoundingClientRect();\n    window.scrollBy({\n        top: 590,\n        behavior: 'smooth',\n    });\n};"],"names":["$iQIUW","parcelRequire","$40e894cac32bd2b5$var$page","$40e894cac32bd2b5$var$refs","$lpPzL","default","$40e894cac32bd2b5$var$createMarkupCard","card","hits","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","$40e894cac32bd2b5$var$createBigImg","$parcel$interopDefault","$fZKcF","nav","captionsData","captionPosition","captionDelay","refresh","$40e894cac32bd2b5$var$renderNextCards","res","markupCard","data","quantityPhoto","totalHits","quantityPage","Math","floor","gallery","insertAdjacentHTML","Notify","success","pages","loadBtn","classList","replace","setTimeout","info","timeout","$40e894cac32bd2b5$var$auditMaxQuantityPhoto","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","form","addEventListener","async","evt","preventDefault","inputValue","currentTarget","elements","searchQuery","value","trim","warning","ceil","innerHTML","toggle","$40e894cac32bd2b5$var$checkZeroArray","$40e894cac32bd2b5$var$renderCard","$7rYDH","fetchCategory","error","console","log","localStorage","setItem","getRecordInputValue","getItem","then","catch"],"version":3,"file":"load_more.18b40714.js.map"}