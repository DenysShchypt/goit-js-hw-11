{"mappings":"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","sources":["src/js/load_more.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { fetchCategory } from './api';\nimport getRefs from './get-refs';\n\nlet page = 0;\nconst refs = getRefs();\nrefs.form.addEventListener('submit', handlerValueForm);\nrefs.loadBtn.addEventListener('click', handlerBtnLoad)\n\nasync function handlerValueForm(evt) {\n    evt.preventDefault();\n    page = 1;\n    const inputValue = evt.currentTarget.elements.searchQuery.value.trim();\n    if (inputValue === '') {\n        return Notify.warning(\"Sorry, there are no images matching your search query. Please try again.\");\n    };\n    try {\n        const cards = await fetchCategory(inputValue, page);\n        renderCard(cards);\n    } catch (error) {\n        console.log(error);\n    };\n    localStorage.setItem(\"input\", inputValue);\n\n};\n\nfunction renderCard(res) {\n\n    const markupCard = createMarkupCard(res.data);\n    const quantityPhoto = res.data.totalHits;\n    const quantityPage = Math.ceil(quantityPhoto / 40)\n    refs.gallery.innerHTML = markupCard;\n    checkZeroArray(quantityPhoto, quantityPage)\n    createBigImg()\n    scrollOnePage()\n\n};\n\nfunction createMarkupCard(card) {\n\n    return card.hits.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => {\n        return `<div class=\"photo-card\">\n        <a class=\"gallery__link\" href=\"${largeImageURL}\">\n       <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" class=\"gallery-img\"/>\n       </a>\n       <div class=\"info\">\n         <p class=\"info-item\"><b>Likes ${likes}</b></p>\n         <p class=\"info-item\"><b>Views ${views}</b></p>\n         <p class=\"info-item\"><b>Comments ${comments}</b></p>\n         <p class=\"info-item\"><b>Downloads ${downloads}</b></p>\n       </div>\n     </div>`\n    }).join('');\n\n};\n\nfunction checkZeroArray(quantityPhoto, quantityPage) {\n\n    if (quantityPhoto !== 0) {\n        Notify.success(`Hooray! We found ${quantityPhoto} images.`);\n        refs.loadBtn.classList.replace('load-more', 'js-load-more');\n    };\n\n    if (quantityPhoto === 0) {\n        Notify.warning(\"Sorry, there are no images matching your search query. Please try again.\");\n    } else if (quantityPhoto < 40 && quantityPage === 1) {\n        refs.loadBtn.classList.toggle('load-more');\n        setTimeout(() => {\n            Notify.info(\"We're sorry, but you've reached the end of search results.\")\n        }, 4000);\n    };\n\n};\n\nfunction createBigImg() {\n\n    const lightbox = new SimpleLightbox('.gallery a',\n        {\n            nav: true,\n            captionsData: 'alt',\n            captionPosition: 'bottom',\n            captionDelay: 250,\n        });\n    lightbox.refresh();\n\n};\n\nfunction scrollOnePage() {\n\n    refs.gallery.firstElementChild.getBoundingClientRect();\n    window.scrollBy({\n        top: 90,\n        behavior: 'smooth',\n    });\n\n};\n\nasync function handlerBtnLoad() {\n\n    page += 1;\n    const getRecordInputValue = localStorage.getItem(\"input\");\n    // try {\n    //     const cards = await fetchCategory(getRecordInputValue, page);\n    //     renderNextCards(cards);\n    // } catch (error) {\n    //     console.log(error);\n    // };\n    fetchCategory(getRecordInputValue, page).then(renderNextCards).catch(error => {\n        console.log(error);\n    })\n};\n\nfunction renderNextCards(res) {\n\n    const markupCard = createMarkupCard(res.data);\n    const quantityPhoto = res.data.totalHits;\n    const quantityPage = Math.floor(quantityPhoto / 40);\n    refs.gallery.insertAdjacentHTML('beforeend', markupCard);\n    Notify.success(`Hooray! We found ${quantityPhoto} images.`);\n    auditMaxQuantityPhoto(page, quantityPage);\n    createBigImg();\n    scrollSecondPage();\n\n};\n\nfunction auditMaxQuantityPhoto(pages, quantityPage) {\n\n    if (quantityPage < pages) {\n        refs.loadBtn.classList.replace('js-load-more', 'load-more');\n        setTimeout(() => {\n            Notify.info(\"We're sorry, but you've reached the end of search results.\", {\n                timeout: 5000,\n            },)\n        }, 3000)\n    };\n\n};\n\n\n\nfunction scrollSecondPage() {\n\n    refs.gallery.firstElementChild.getBoundingClientRect();\n    window.scrollBy({\n        top: 590,\n        behavior: 'smooth',\n    });\n};"],"names":["$bpxeT","parcelRequire","$8255347ea5c7df62$var$page","$8255347ea5c7df62$var$refs","$3vKGz","default","$8255347ea5c7df62$var$_handlerValueForm","$parcel$interopDefault","$2TvXO","mark","_callee","evt","inputValue","preventDefault","currentTarget","elements","searchQuery","value","trim","$h6c0i","Notify","warning","$b7ONl","fetchCategory","$8255347ea5c7df62$var$renderCard","_ctx","sent","console","log","t0","localStorage","setItem","apply","this","arguments","res","markupCard","$8255347ea5c7df62$var$createMarkupCard","data","quantityPhoto","totalHits","quantityPage","Math","ceil","gallery","innerHTML","success","concat","loadBtn","classList","replace","toggle","setTimeout","info","$8255347ea5c7df62$var$checkZeroArray","$8255347ea5c7df62$var$createBigImg","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","card","hits","map","param","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","$5IjG7","nav","captionsData","captionPosition","captionDelay","refresh","$8255347ea5c7df62$var$_handlerBtnLoad","getRecordInputValue","getItem","then","$8255347ea5c7df62$var$renderNextCards","catch","error","floor","insertAdjacentHTML","pages","timeout","$8255347ea5c7df62$var$auditMaxQuantityPhoto","form","addEventListener"],"version":3,"file":"load_more.e5b56e61.js.map"}